
state 0:

	program : . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 104
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 1:

	exp : if_then_else .  (reduce by rule 11)



	.	reduce by rule 11


state 2:

	exp : assignment .  (reduce by rule 10)



	.	reduce by rule 10


state 3:

	lvalue : lvalue_complex .  (reduce by rule 48)
	lvalue_complex : lvalue_complex . LBRACK exp RBRACK 

	LBRACK	shift 20


	.	reduce by rule 48


state 4:

	exp : lvalue .  (reduce by rule 6)
	lvalue_complex : lvalue . DOT ID 
	assignment : lvalue . ASSIGN exp 

	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 6


state 5:

	exp : array_creation .  (reduce by rule 8)



	.	reduce by rule 8


state 6:

	array_creation : id_subscript . OF exp 
	lvalue : id_subscript .  (reduce by rule 49)

	OF	shift 23


	.	reduce by rule 49


state 7:

	exp : function_call .  (reduce by rule 2)



	.	reduce by rule 2


state 8:

	exp : arithmetic .  (reduce by rule 3)



	.	reduce by rule 3


state 9:

	exp : letexp .  (reduce by rule 1)



	.	reduce by rule 1


state 10:

	exp : rvalue .  (reduce by rule 7)



	.	reduce by rule 7


state 11:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 9)



	.	reduce by rule 9


state 13:

	letexp : LET . decs IN expseq END 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 32
	dec	goto 31
	vardec	goto 30
	tydec	goto 29
	fundec	goto 28

	.	reduce by rule 17


state 14:

	if_then_else : IF . exp THEN exp 
	if_then_else : IF . exp THEN exp ELSE exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 36
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 15:

	exp : MINUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 37
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 16:

	exp : LPAREN . expseq RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 40
	rvalue	goto 10
	letexp	goto 9
	nonempty_expseq	goto 39
	expseq	goto 38
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	reduce by rule 13


state 17:

	rvalue : STRING .  (reduce by rule 52)



	.	reduce by rule 52


state 18:

	rvalue : INT .  (reduce by rule 51)



	.	reduce by rule 51


state 19:

	function_call : ID . LPAREN parameters RPAREN 
	id_subscript : ID . LBRACK exp RBRACK 
	lvalue : ID .  (reduce by rule 47)

	LPAREN	shift 42
	LBRACK	shift 41


	.	reduce by rule 47


state 20:

	lvalue_complex : lvalue_complex LBRACK . exp RBRACK 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 43
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 21:

	assignment : lvalue ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 44
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 22:

	lvalue_complex : lvalue DOT . ID 

	ID	shift 45


	.	error


state 23:

	array_creation : id_subscript OF . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 46
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 24:

	arithmetic : exp DIVIDE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 47
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 25:

	arithmetic : exp TIMES . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 48
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 26:

	arithmetic : exp MINUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 49
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 27:

	arithmetic : exp PLUS . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 50
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 28:

	dec : fundec .  (reduce by rule 21)



	.	reduce by rule 21


state 29:

	dec : tydec .  (reduce by rule 20)



	.	reduce by rule 20


state 30:

	dec : vardec .  (reduce by rule 19)



	.	reduce by rule 19


state 31:

	decs : dec . decs 

	FUNCTION	shift 35
	VAR	shift 34
	TYPE	shift 33

	decs	goto 51
	dec	goto 31
	vardec	goto 30
	tydec	goto 29
	fundec	goto 28

	.	reduce by rule 17


state 32:

	letexp : LET decs . IN expseq END 

	IN	shift 52


	.	error


state 33:

	tydec : TYPE . ID EQ ty 

	ID	shift 53


	.	error


state 34:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 54


	.	error


state 35:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 55


	.	error


state 36:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp . THEN exp 
	if_then_else : IF exp . THEN exp ELSE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	THEN	shift 56


	.	error


state 37:

	exp : MINUS exp .  (reduce by rule 4)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 4


state 38:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 57


	.	error


state 39:

	nonempty_expseq : nonempty_expseq . SEMICOLON exp 
	expseq : nonempty_expseq .  (reduce by rule 14)

	SEMICOLON	shift 58


	.	reduce by rule 14


state 40:

	nonempty_expseq : exp .  (reduce by rule 15)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 15


state 41:

	id_subscript : ID LBRACK . exp RBRACK 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 59
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 42:

	function_call : ID LPAREN . parameters RPAREN 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 62
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	parameters	goto 61
	nonempty_parameters	goto 60
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	reduce by rule 39


state 43:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	lvalue_complex : lvalue_complex LBRACK exp . RBRACK 

	RBRACK	shift 63
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	error


state 44:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 50)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 50


state 45:

	lvalue_complex : lvalue DOT ID .  (reduce by rule 45)



	.	reduce by rule 45


state 46:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	array_creation : id_subscript OF exp .  (reduce by rule 44)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 44


state 47:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 37)



	.	reduce by rule 37


state 48:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 36)
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 36


state 49:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 35)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 35


state 50:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 34)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 34


state 51:

	decs : dec decs .  (reduce by rule 18)



	.	reduce by rule 18


state 52:

	letexp : LET decs IN . expseq END 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 40
	rvalue	goto 10
	letexp	goto 9
	nonempty_expseq	goto 39
	expseq	goto 64
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	reduce by rule 13


state 53:

	tydec : TYPE ID . EQ ty 

	EQ	shift 65


	.	error


state 54:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 67
	ASSIGN	shift 66


	.	error


state 55:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 68


	.	error


state 56:

	if_then_else : IF exp THEN . exp 
	if_then_else : IF exp THEN . exp ELSE exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 69
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 57:

	exp : LPAREN expseq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 58:

	nonempty_expseq : nonempty_expseq SEMICOLON . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 70
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 59:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	id_subscript : ID LBRACK exp . RBRACK 

	RBRACK	shift 71
	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	error


state 60:

	parameters : nonempty_parameters .  (reduce by rule 40)
	nonempty_parameters : nonempty_parameters . COMMA exp 

	COMMA	shift 72


	.	reduce by rule 40


state 61:

	function_call : ID LPAREN parameters . RPAREN 

	RPAREN	shift 73


	.	error


state 62:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : exp .  (reduce by rule 41)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 41


state 63:

	lvalue_complex : lvalue_complex LBRACK exp RBRACK .  (reduce by rule 46)



	.	reduce by rule 46


state 64:

	letexp : LET decs IN expseq . END 

	END	shift 74


	.	error


state 65:

	tydec : TYPE ID EQ . ty 

	ID	shift 78
	LBRACE	shift 77
	ARRAY	shift 76

	ty	goto 75

	.	error


state 66:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 79
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 67:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 80


	.	error


state 68:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 83

	nonempty_tyfields	goto 82
	tyfields	goto 81

	.	reduce by rule 28


state 69:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp THEN exp .  (reduce by rule 53)
	if_then_else : IF exp THEN exp . ELSE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24
	ELSE	shift 84


	.	reduce by rule 53


state 70:

	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (reduce by rule 16)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 16


state 71:

	id_subscript : ID LBRACK exp RBRACK .  (reduce by rule 43)



	.	reduce by rule 43


state 72:

	nonempty_parameters : nonempty_parameters COMMA . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 85
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 73:

	function_call : ID LPAREN parameters RPAREN .  (reduce by rule 38)



	.	reduce by rule 38


state 74:

	letexp : LET decs IN expseq END .  (reduce by rule 12)



	.	reduce by rule 12


state 75:

	tydec : TYPE ID EQ ty .  (reduce by rule 24)



	.	reduce by rule 24


state 76:

	ty : ARRAY . OF ID 

	OF	shift 86


	.	error


state 77:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 83

	nonempty_tyfields	goto 82
	tyfields	goto 87

	.	reduce by rule 28


state 78:

	ty : ID .  (reduce by rule 25)



	.	reduce by rule 25


state 79:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 23)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 23


state 80:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 88


	.	error


state 81:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 89


	.	error


state 82:

	tyfields : nonempty_tyfields .  (reduce by rule 29)



	.	reduce by rule 29


state 83:

	nonempty_tyfields : ID . COLON ID 
	nonempty_tyfields : ID . COLON ID COMMA nonempty_tyfields 

	COLON	shift 90


	.	error


state 84:

	if_then_else : IF exp THEN exp ELSE . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 91
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 85:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : nonempty_parameters COMMA exp .  (reduce by rule 42)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 42


state 86:

	ty : ARRAY OF . ID 

	ID	shift 92


	.	error


state 87:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 93


	.	error


state 88:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 94
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 89:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 96
	EQ	shift 95


	.	error


state 90:

	nonempty_tyfields : ID COLON . ID 
	nonempty_tyfields : ID COLON . ID COMMA nonempty_tyfields 

	ID	shift 97


	.	error


state 91:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp THEN exp ELSE exp .  (reduce by rule 54)

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 54


state 92:

	ty : ARRAY OF ID .  (reduce by rule 27)



	.	reduce by rule 27


state 93:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 26)



	.	reduce by rule 26


state 94:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 22)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 22


state 95:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 98
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 96:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 99


	.	error


state 97:

	nonempty_tyfields : ID COLON ID .  (reduce by rule 30)
	nonempty_tyfields : ID COLON ID . COMMA nonempty_tyfields 

	COMMA	shift 100


	.	reduce by rule 30


state 98:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 32)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 32


state 99:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 101


	.	error


state 100:

	nonempty_tyfields : ID COLON ID COMMA . nonempty_tyfields 

	ID	shift 83

	nonempty_tyfields	goto 102

	.	error


state 101:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 19
	INT	shift 18
	STRING	shift 17
	LPAREN	shift 16
	MINUS	shift 15
	IF	shift 14
	LET	shift 13
	NIL	shift 12

	exp	goto 103
	rvalue	goto 10
	letexp	goto 9
	arithmetic	goto 8
	function_call	goto 7
	id_subscript	goto 6
	array_creation	goto 5
	lvalue	goto 4
	lvalue_complex	goto 3
	assignment	goto 2
	if_then_else	goto 1

	.	error


state 102:

	nonempty_tyfields : ID COLON ID COMMA nonempty_tyfields .  (reduce by rule 31)



	.	reduce by rule 31


state 103:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 33)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 27
	MINUS	shift 26
	TIMES	shift 25
	DIVIDE	shift 24


	.	reduce by rule 33


state 104:


	EOF	accept


	.	error

138 of 399 action table entries left after compaction
265 goto table entries
