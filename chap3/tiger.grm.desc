
state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 94
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 1:

	lvalue : lvalue_complex .  (reduce by rule 46)
	lvalue_complex : lvalue_complex . LBRACK exp RBRACK 

	LBRACK	shift 17


	.	reduce by rule 46


state 2:

	exp : lvalue .  (reduce by rule 6)
	lvalue_complex : lvalue . DOT ID 

	DOT	shift 18


	.	reduce by rule 6


state 3:

	exp : array_creation .  (reduce by rule 8)



	.	reduce by rule 8


state 4:

	array_creation : id_subscript . OF exp 
	lvalue : id_subscript .  (reduce by rule 47)

	OF	shift 19


	.	reduce by rule 47


state 5:

	exp : function_call .  (reduce by rule 2)



	.	reduce by rule 2


state 6:

	exp : arithmetic .  (reduce by rule 3)



	.	reduce by rule 3


state 7:

	exp : letexp .  (reduce by rule 1)



	.	reduce by rule 1


state 8:

	exp : rvalue .  (reduce by rule 7)



	.	reduce by rule 7


state 9:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 9)



	.	reduce by rule 9


state 11:

	letexp : LET . decs IN expseq END 

	FUNCTION	shift 31
	VAR	shift 30
	TYPE	shift 29

	decs	goto 28
	dec	goto 27
	vardec	goto 26
	tydec	goto 25
	fundec	goto 24

	.	reduce by rule 15


state 12:

	exp : MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 32
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 13:

	exp : LPAREN . expseq RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 35
	rvalue	goto 8
	letexp	goto 7
	nonempty_expseq	goto 34
	expseq	goto 33
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	reduce by rule 11


state 14:

	rvalue : STRING .  (reduce by rule 49)



	.	reduce by rule 49


state 15:

	rvalue : INT .  (reduce by rule 48)



	.	reduce by rule 48


state 16:

	function_call : ID . LPAREN parameters RPAREN 
	id_subscript : ID . LBRACK exp RBRACK 
	lvalue : ID .  (reduce by rule 45)

	LPAREN	shift 37
	LBRACK	shift 36


	.	reduce by rule 45


state 17:

	lvalue_complex : lvalue_complex LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 38
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 18:

	lvalue_complex : lvalue DOT . ID 

	ID	shift 39


	.	error


state 19:

	array_creation : id_subscript OF . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 40
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 20:

	arithmetic : exp DIVIDE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 41
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 21:

	arithmetic : exp TIMES . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 42
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 22:

	arithmetic : exp MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 43
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 23:

	arithmetic : exp PLUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 44
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 24:

	dec : fundec .  (reduce by rule 19)



	.	reduce by rule 19


state 25:

	dec : tydec .  (reduce by rule 18)



	.	reduce by rule 18


state 26:

	dec : vardec .  (reduce by rule 17)



	.	reduce by rule 17


state 27:

	decs : dec . decs 

	FUNCTION	shift 31
	VAR	shift 30
	TYPE	shift 29

	decs	goto 45
	dec	goto 27
	vardec	goto 26
	tydec	goto 25
	fundec	goto 24

	.	reduce by rule 15


state 28:

	letexp : LET decs . IN expseq END 

	IN	shift 46


	.	error


state 29:

	tydec : TYPE . ID EQ ty 

	ID	shift 47


	.	error


state 30:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 48


	.	error


state 31:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 49


	.	error


state 32:

	exp : MINUS exp .  (reduce by rule 4)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 4


state 33:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 50


	.	error


state 34:

	nonempty_expseq : nonempty_expseq . SEMICOLON exp 
	expseq : nonempty_expseq .  (reduce by rule 12)

	SEMICOLON	shift 51


	.	reduce by rule 12


state 35:

	nonempty_expseq : exp .  (reduce by rule 13)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 13


state 36:

	id_subscript : ID LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 52
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 37:

	function_call : ID LPAREN . parameters RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 55
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	parameters	goto 54
	nonempty_parameters	goto 53
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	reduce by rule 37


state 38:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	lvalue_complex : lvalue_complex LBRACK exp . RBRACK 

	RBRACK	shift 56
	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	error


state 39:

	lvalue_complex : lvalue DOT ID .  (reduce by rule 43)



	.	reduce by rule 43


state 40:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	array_creation : id_subscript OF exp .  (reduce by rule 42)

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 42


state 41:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 35)



	.	reduce by rule 35


state 42:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 34)
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 34


state 43:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 33)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 33


state 44:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 32)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 32


state 45:

	decs : dec decs .  (reduce by rule 16)



	.	reduce by rule 16


state 46:

	letexp : LET decs IN . expseq END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 35
	rvalue	goto 8
	letexp	goto 7
	nonempty_expseq	goto 34
	expseq	goto 57
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	reduce by rule 11


state 47:

	tydec : TYPE ID . EQ ty 

	EQ	shift 58


	.	error


state 48:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 60
	ASSIGN	shift 59


	.	error


state 49:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 61


	.	error


state 50:

	exp : LPAREN expseq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 51:

	nonempty_expseq : nonempty_expseq SEMICOLON . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 62
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 52:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	id_subscript : ID LBRACK exp . RBRACK 

	RBRACK	shift 63
	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	error


state 53:

	parameters : nonempty_parameters .  (reduce by rule 38)
	nonempty_parameters : nonempty_parameters . COMMA exp 

	COMMA	shift 64


	.	reduce by rule 38


state 54:

	function_call : ID LPAREN parameters . RPAREN 

	RPAREN	shift 65


	.	error


state 55:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : exp .  (reduce by rule 39)

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 39


state 56:

	lvalue_complex : lvalue_complex LBRACK exp RBRACK .  (reduce by rule 44)



	.	reduce by rule 44


state 57:

	letexp : LET decs IN expseq . END 

	END	shift 66


	.	error


state 58:

	tydec : TYPE ID EQ . ty 

	ID	shift 70
	LBRACE	shift 69
	ARRAY	shift 68

	ty	goto 67

	.	error


state 59:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 71
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 60:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 72


	.	error


state 61:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 75

	nonempty_tyfields	goto 74
	tyfields	goto 73

	.	reduce by rule 26


state 62:

	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (reduce by rule 14)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 14


state 63:

	id_subscript : ID LBRACK exp RBRACK .  (reduce by rule 41)



	.	reduce by rule 41


state 64:

	nonempty_parameters : nonempty_parameters COMMA . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 76
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 65:

	function_call : ID LPAREN parameters RPAREN .  (reduce by rule 36)



	.	reduce by rule 36


state 66:

	letexp : LET decs IN expseq END .  (reduce by rule 10)



	.	reduce by rule 10


state 67:

	tydec : TYPE ID EQ ty .  (reduce by rule 22)



	.	reduce by rule 22


state 68:

	ty : ARRAY . OF ID 

	OF	shift 77


	.	error


state 69:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 75

	nonempty_tyfields	goto 74
	tyfields	goto 78

	.	reduce by rule 26


state 70:

	ty : ID .  (reduce by rule 23)



	.	reduce by rule 23


state 71:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 21)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 21


state 72:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 79


	.	error


state 73:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 80


	.	error


state 74:

	tyfields : nonempty_tyfields .  (reduce by rule 27)



	.	reduce by rule 27


state 75:

	nonempty_tyfields : ID . COLON ID 
	nonempty_tyfields : ID . COLON ID COMMA nonempty_tyfields 

	COLON	shift 81


	.	error


state 76:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : nonempty_parameters COMMA exp .  (reduce by rule 40)

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 40


state 77:

	ty : ARRAY OF . ID 

	ID	shift 82


	.	error


state 78:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 83


	.	error


state 79:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 84
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 80:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 86
	EQ	shift 85


	.	error


state 81:

	nonempty_tyfields : ID COLON . ID 
	nonempty_tyfields : ID COLON . ID COMMA nonempty_tyfields 

	ID	shift 87


	.	error


state 82:

	ty : ARRAY OF ID .  (reduce by rule 25)



	.	reduce by rule 25


state 83:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 24)



	.	reduce by rule 24


state 84:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 20)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 20


state 85:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 88
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 86:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 89


	.	error


state 87:

	nonempty_tyfields : ID COLON ID .  (reduce by rule 28)
	nonempty_tyfields : ID COLON ID . COMMA nonempty_tyfields 

	COMMA	shift 90


	.	reduce by rule 28


state 88:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 30)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 30


state 89:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 91


	.	error


state 90:

	nonempty_tyfields : ID COLON ID COMMA . nonempty_tyfields 

	ID	shift 75

	nonempty_tyfields	goto 92

	.	error


state 91:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	LET	shift 11
	NIL	shift 10

	exp	goto 93
	rvalue	goto 8
	letexp	goto 7
	arithmetic	goto 6
	function_call	goto 5
	id_subscript	goto 4
	array_creation	goto 3
	lvalue	goto 2
	lvalue_complex	goto 1

	.	error


state 92:

	nonempty_tyfields : ID COLON ID COMMA nonempty_tyfields .  (reduce by rule 29)



	.	reduce by rule 29


state 93:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 31)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 23
	MINUS	shift 22
	TIMES	shift 21
	DIVIDE	shift 20


	.	reduce by rule 31


state 94:


	EOF	accept


	.	error

116 of 320 action table entries left after compaction
185 goto table entries
