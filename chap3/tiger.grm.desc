
state 0:

	program : . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 13
	program	goto 118
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 1:

	exp : for_loop .  (reduce by rule 13)



	.	reduce by rule 13


state 2:

	exp : while_loop .  (reduce by rule 12)



	.	reduce by rule 12


state 3:

	exp : if_then_else .  (reduce by rule 11)



	.	reduce by rule 11


state 4:

	exp : assignment .  (reduce by rule 10)



	.	reduce by rule 10


state 5:

	lvalue : lvalue_complex .  (reduce by rule 50)
	lvalue_complex : lvalue_complex . LBRACK exp RBRACK 

	LBRACK	shift 24


	.	reduce by rule 50


state 6:

	exp : lvalue .  (reduce by rule 6)
	lvalue_complex : lvalue . DOT ID 
	assignment : lvalue . ASSIGN exp 

	DOT	shift 26
	ASSIGN	shift 25


	.	reduce by rule 6


state 7:

	exp : array_creation .  (reduce by rule 8)



	.	reduce by rule 8


state 8:

	array_creation : id_subscript . OF exp 
	lvalue : id_subscript .  (reduce by rule 51)

	OF	shift 27


	.	reduce by rule 51


state 9:

	exp : function_call .  (reduce by rule 2)



	.	reduce by rule 2


state 10:

	exp : arithmetic .  (reduce by rule 3)



	.	reduce by rule 3


state 11:

	exp : letexp .  (reduce by rule 1)



	.	reduce by rule 1


state 12:

	exp : rvalue .  (reduce by rule 7)



	.	reduce by rule 7


state 13:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 0


state 14:

	exp : NIL .  (reduce by rule 9)



	.	reduce by rule 9


state 15:

	letexp : LET . decs IN expseq END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 36
	dec	goto 35
	vardec	goto 34
	tydec	goto 33
	fundec	goto 32

	.	reduce by rule 19


state 16:

	for_loop : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 17:

	while_loop : WHILE . exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 41
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 18:

	if_then_else : IF . exp THEN exp 
	if_then_else : IF . exp THEN exp ELSE exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 42
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 19:

	exp : MINUS . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 43
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 20:

	exp : LPAREN . expseq RPAREN 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 46
	rvalue	goto 12
	letexp	goto 11
	nonempty_expseq	goto 45
	expseq	goto 44
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	reduce by rule 15


state 21:

	rvalue : STRING .  (reduce by rule 54)



	.	reduce by rule 54


state 22:

	rvalue : INT .  (reduce by rule 53)



	.	reduce by rule 53


state 23:

	function_call : ID . LPAREN parameters RPAREN 
	id_subscript : ID . LBRACK exp RBRACK 
	lvalue : ID .  (reduce by rule 49)

	LPAREN	shift 48
	LBRACK	shift 47


	.	reduce by rule 49


state 24:

	lvalue_complex : lvalue_complex LBRACK . exp RBRACK 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 49
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 25:

	assignment : lvalue ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 50
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 26:

	lvalue_complex : lvalue DOT . ID 

	ID	shift 51


	.	error


state 27:

	array_creation : id_subscript OF . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 52
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 28:

	arithmetic : exp DIVIDE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 53
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 29:

	arithmetic : exp TIMES . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 54
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 30:

	arithmetic : exp MINUS . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 55
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 31:

	arithmetic : exp PLUS . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 56
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 32:

	dec : fundec .  (reduce by rule 23)



	.	reduce by rule 23


state 33:

	dec : tydec .  (reduce by rule 22)



	.	reduce by rule 22


state 34:

	dec : vardec .  (reduce by rule 21)



	.	reduce by rule 21


state 35:

	decs : dec . decs 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 57
	dec	goto 35
	vardec	goto 34
	tydec	goto 33
	fundec	goto 32

	.	reduce by rule 19


state 36:

	letexp : LET decs . IN expseq END 

	IN	shift 58


	.	error


state 37:

	tydec : TYPE . ID EQ ty 

	ID	shift 59


	.	error


state 38:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 60


	.	error


state 39:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 61


	.	error


state 40:

	for_loop : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 62


	.	error


state 41:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	while_loop : WHILE exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	DO	shift 63


	.	error


state 42:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp . THEN exp 
	if_then_else : IF exp . THEN exp ELSE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	THEN	shift 64


	.	error


state 43:

	exp : MINUS exp .  (reduce by rule 4)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 4


state 44:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 65


	.	error


state 45:

	nonempty_expseq : nonempty_expseq . SEMICOLON exp 
	expseq : nonempty_expseq .  (reduce by rule 16)

	SEMICOLON	shift 66


	.	reduce by rule 16


state 46:

	nonempty_expseq : exp .  (reduce by rule 17)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 17


state 47:

	id_subscript : ID LBRACK . exp RBRACK 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 67
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 48:

	function_call : ID LPAREN . parameters RPAREN 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 70
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	parameters	goto 69
	nonempty_parameters	goto 68
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	reduce by rule 41


state 49:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	lvalue_complex : lvalue_complex LBRACK exp . RBRACK 

	RBRACK	shift 71
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	error


state 50:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 52)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 52


state 51:

	lvalue_complex : lvalue DOT ID .  (reduce by rule 47)



	.	reduce by rule 47


state 52:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	array_creation : id_subscript OF exp .  (reduce by rule 46)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 46


state 53:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 39)



	.	reduce by rule 39


state 54:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 38)
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 38


state 55:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 37)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 37


state 56:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 36)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 36


state 57:

	decs : dec decs .  (reduce by rule 20)



	.	reduce by rule 20


state 58:

	letexp : LET decs IN . expseq END 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 46
	rvalue	goto 12
	letexp	goto 11
	nonempty_expseq	goto 45
	expseq	goto 72
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	reduce by rule 15


state 59:

	tydec : TYPE ID . EQ ty 

	EQ	shift 73


	.	error


state 60:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 75
	ASSIGN	shift 74


	.	error


state 61:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 76


	.	error


state 62:

	for_loop : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 77
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 63:

	while_loop : WHILE exp DO . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 78
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 64:

	if_then_else : IF exp THEN . exp 
	if_then_else : IF exp THEN . exp ELSE exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 79
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 65:

	exp : LPAREN expseq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 66:

	nonempty_expseq : nonempty_expseq SEMICOLON . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 80
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 67:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	id_subscript : ID LBRACK exp . RBRACK 

	RBRACK	shift 81
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	error


state 68:

	parameters : nonempty_parameters .  (reduce by rule 42)
	nonempty_parameters : nonempty_parameters . COMMA exp 

	COMMA	shift 82


	.	reduce by rule 42


state 69:

	function_call : ID LPAREN parameters . RPAREN 

	RPAREN	shift 83


	.	error


state 70:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : exp .  (reduce by rule 43)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 43


state 71:

	lvalue_complex : lvalue_complex LBRACK exp RBRACK .  (reduce by rule 48)



	.	reduce by rule 48


state 72:

	letexp : LET decs IN expseq . END 

	END	shift 84


	.	error


state 73:

	tydec : TYPE ID EQ . ty 

	ID	shift 88
	LBRACE	shift 87
	ARRAY	shift 86

	ty	goto 85

	.	error


state 74:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 89
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 75:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 90


	.	error


state 76:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 93

	nonempty_tyfields	goto 92
	tyfields	goto 91

	.	reduce by rule 30


state 77:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	for_loop : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	TO	shift 94


	.	error


state 78:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	while_loop : WHILE exp DO exp .  (reduce by rule 57)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 57


state 79:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp THEN exp .  (reduce by rule 55)
	if_then_else : IF exp THEN exp . ELSE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	ELSE	shift 95


	.	reduce by rule 55


state 80:

	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (reduce by rule 18)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 18


state 81:

	id_subscript : ID LBRACK exp RBRACK .  (reduce by rule 45)



	.	reduce by rule 45


state 82:

	nonempty_parameters : nonempty_parameters COMMA . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 96
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 83:

	function_call : ID LPAREN parameters RPAREN .  (reduce by rule 40)



	.	reduce by rule 40


state 84:

	letexp : LET decs IN expseq END .  (reduce by rule 14)



	.	reduce by rule 14


state 85:

	tydec : TYPE ID EQ ty .  (reduce by rule 26)



	.	reduce by rule 26


state 86:

	ty : ARRAY . OF ID 

	OF	shift 97


	.	error


state 87:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 93

	nonempty_tyfields	goto 92
	tyfields	goto 98

	.	reduce by rule 30


state 88:

	ty : ID .  (reduce by rule 27)



	.	reduce by rule 27


state 89:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 25)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 25


state 90:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 99


	.	error


state 91:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 100


	.	error


state 92:

	tyfields : nonempty_tyfields .  (reduce by rule 31)



	.	reduce by rule 31


state 93:

	nonempty_tyfields : ID . COLON ID 
	nonempty_tyfields : ID . COLON ID COMMA nonempty_tyfields 

	COLON	shift 101


	.	error


state 94:

	for_loop : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 102
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 95:

	if_then_else : IF exp THEN exp ELSE . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 103
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 96:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : nonempty_parameters COMMA exp .  (reduce by rule 44)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 44


state 97:

	ty : ARRAY OF . ID 

	ID	shift 104


	.	error


state 98:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 105


	.	error


state 99:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 106
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 100:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 108
	EQ	shift 107


	.	error


state 101:

	nonempty_tyfields : ID COLON . ID 
	nonempty_tyfields : ID COLON . ID COMMA nonempty_tyfields 

	ID	shift 109


	.	error


state 102:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	for_loop : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	DO	shift 110


	.	error


state 103:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	if_then_else : IF exp THEN exp ELSE exp .  (reduce by rule 56)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 56


state 104:

	ty : ARRAY OF ID .  (reduce by rule 29)



	.	reduce by rule 29


state 105:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 28)



	.	reduce by rule 28


state 106:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 24)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 24


state 107:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 111
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 108:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 112


	.	error


state 109:

	nonempty_tyfields : ID COLON ID .  (reduce by rule 32)
	nonempty_tyfields : ID COLON ID . COMMA nonempty_tyfields 

	COMMA	shift 113


	.	reduce by rule 32


state 110:

	for_loop : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 114
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 111:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 34)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 34


state 112:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 115


	.	error


state 113:

	nonempty_tyfields : ID COLON ID COMMA . nonempty_tyfields 

	ID	shift 93

	nonempty_tyfields	goto 116

	.	error


state 114:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	for_loop : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 58)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 58


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 23
	INT	shift 22
	STRING	shift 21
	LPAREN	shift 20
	MINUS	shift 19
	IF	shift 18
	WHILE	shift 17
	FOR	shift 16
	LET	shift 15
	NIL	shift 14

	exp	goto 117
	rvalue	goto 12
	letexp	goto 11
	arithmetic	goto 10
	function_call	goto 9
	id_subscript	goto 8
	array_creation	goto 7
	lvalue	goto 6
	lvalue_complex	goto 5
	assignment	goto 4
	if_then_else	goto 3
	while_loop	goto 2
	for_loop	goto 1

	.	error


state 116:

	nonempty_tyfields : ID COLON ID COMMA nonempty_tyfields .  (reduce by rule 33)



	.	reduce by rule 33


state 117:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 35)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 35


state 118:


	EOF	accept


	.	error

169 of 532 action table entries left after compaction
374 goto table entries
