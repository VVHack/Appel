
state 0:

	program : . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 97
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 1:

	exp : assignment .  (reduce by rule 10)



	.	reduce by rule 10


state 2:

	lvalue : lvalue_complex .  (reduce by rule 47)
	lvalue_complex : lvalue_complex . LBRACK exp RBRACK 

	LBRACK	shift 18


	.	reduce by rule 47


state 3:

	exp : lvalue .  (reduce by rule 6)
	lvalue_complex : lvalue . DOT ID 
	assignment : lvalue . ASSIGN exp 

	DOT	shift 20
	ASSIGN	shift 19


	.	reduce by rule 6


state 4:

	exp : array_creation .  (reduce by rule 8)



	.	reduce by rule 8


state 5:

	array_creation : id_subscript . OF exp 
	lvalue : id_subscript .  (reduce by rule 48)

	OF	shift 21


	.	reduce by rule 48


state 6:

	exp : function_call .  (reduce by rule 2)



	.	reduce by rule 2


state 7:

	exp : arithmetic .  (reduce by rule 3)



	.	reduce by rule 3


state 8:

	exp : letexp .  (reduce by rule 1)



	.	reduce by rule 1


state 9:

	exp : rvalue .  (reduce by rule 7)



	.	reduce by rule 7


state 10:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 9)



	.	reduce by rule 9


state 12:

	letexp : LET . decs IN expseq END 

	FUNCTION	shift 33
	VAR	shift 32
	TYPE	shift 31

	decs	goto 30
	dec	goto 29
	vardec	goto 28
	tydec	goto 27
	fundec	goto 26

	.	reduce by rule 16


state 13:

	exp : MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 34
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 14:

	exp : LPAREN . expseq RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 37
	rvalue	goto 9
	letexp	goto 8
	nonempty_expseq	goto 36
	expseq	goto 35
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	reduce by rule 12


state 15:

	rvalue : STRING .  (reduce by rule 51)



	.	reduce by rule 51


state 16:

	rvalue : INT .  (reduce by rule 50)



	.	reduce by rule 50


state 17:

	function_call : ID . LPAREN parameters RPAREN 
	id_subscript : ID . LBRACK exp RBRACK 
	lvalue : ID .  (reduce by rule 46)

	LPAREN	shift 39
	LBRACK	shift 38


	.	reduce by rule 46


state 18:

	lvalue_complex : lvalue_complex LBRACK . exp RBRACK 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 40
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 19:

	assignment : lvalue ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 41
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 20:

	lvalue_complex : lvalue DOT . ID 

	ID	shift 42


	.	error


state 21:

	array_creation : id_subscript OF . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 43
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 22:

	arithmetic : exp DIVIDE . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 44
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 23:

	arithmetic : exp TIMES . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 45
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 24:

	arithmetic : exp MINUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 46
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 25:

	arithmetic : exp PLUS . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 47
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 26:

	dec : fundec .  (reduce by rule 20)



	.	reduce by rule 20


state 27:

	dec : tydec .  (reduce by rule 19)



	.	reduce by rule 19


state 28:

	dec : vardec .  (reduce by rule 18)



	.	reduce by rule 18


state 29:

	decs : dec . decs 

	FUNCTION	shift 33
	VAR	shift 32
	TYPE	shift 31

	decs	goto 48
	dec	goto 29
	vardec	goto 28
	tydec	goto 27
	fundec	goto 26

	.	reduce by rule 16


state 30:

	letexp : LET decs . IN expseq END 

	IN	shift 49


	.	error


state 31:

	tydec : TYPE . ID EQ ty 

	ID	shift 50


	.	error


state 32:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 51


	.	error


state 33:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 52


	.	error


state 34:

	exp : MINUS exp .  (reduce by rule 4)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 4


state 35:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 53


	.	error


state 36:

	nonempty_expseq : nonempty_expseq . SEMICOLON exp 
	expseq : nonempty_expseq .  (reduce by rule 13)

	SEMICOLON	shift 54


	.	reduce by rule 13


state 37:

	nonempty_expseq : exp .  (reduce by rule 14)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 14


state 38:

	id_subscript : ID LBRACK . exp RBRACK 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 55
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 39:

	function_call : ID LPAREN . parameters RPAREN 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 58
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	parameters	goto 57
	nonempty_parameters	goto 56
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	reduce by rule 38


state 40:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	lvalue_complex : lvalue_complex LBRACK exp . RBRACK 

	RBRACK	shift 59
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	error


state 41:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 49)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 49


state 42:

	lvalue_complex : lvalue DOT ID .  (reduce by rule 44)



	.	reduce by rule 44


state 43:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	array_creation : id_subscript OF exp .  (reduce by rule 43)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 43


state 44:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 36)



	.	reduce by rule 36


state 45:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 35)
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 35


state 46:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 34)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 34


state 47:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 33)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 33


state 48:

	decs : dec decs .  (reduce by rule 17)



	.	reduce by rule 17


state 49:

	letexp : LET decs IN . expseq END 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 37
	rvalue	goto 9
	letexp	goto 8
	nonempty_expseq	goto 36
	expseq	goto 60
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	reduce by rule 12


state 50:

	tydec : TYPE ID . EQ ty 

	EQ	shift 61


	.	error


state 51:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 63
	ASSIGN	shift 62


	.	error


state 52:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 64


	.	error


state 53:

	exp : LPAREN expseq RPAREN .  (reduce by rule 5)



	.	reduce by rule 5


state 54:

	nonempty_expseq : nonempty_expseq SEMICOLON . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 65
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 55:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	id_subscript : ID LBRACK exp . RBRACK 

	RBRACK	shift 66
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	error


state 56:

	parameters : nonempty_parameters .  (reduce by rule 39)
	nonempty_parameters : nonempty_parameters . COMMA exp 

	COMMA	shift 67


	.	reduce by rule 39


state 57:

	function_call : ID LPAREN parameters . RPAREN 

	RPAREN	shift 68


	.	error


state 58:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : exp .  (reduce by rule 40)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 40


state 59:

	lvalue_complex : lvalue_complex LBRACK exp RBRACK .  (reduce by rule 45)



	.	reduce by rule 45


state 60:

	letexp : LET decs IN expseq . END 

	END	shift 69


	.	error


state 61:

	tydec : TYPE ID EQ . ty 

	ID	shift 73
	LBRACE	shift 72
	ARRAY	shift 71

	ty	goto 70

	.	error


state 62:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 74
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 63:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 75


	.	error


state 64:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 78

	nonempty_tyfields	goto 77
	tyfields	goto 76

	.	reduce by rule 27


state 65:

	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (reduce by rule 15)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 15


state 66:

	id_subscript : ID LBRACK exp RBRACK .  (reduce by rule 42)



	.	reduce by rule 42


state 67:

	nonempty_parameters : nonempty_parameters COMMA . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 79
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 68:

	function_call : ID LPAREN parameters RPAREN .  (reduce by rule 37)



	.	reduce by rule 37


state 69:

	letexp : LET decs IN expseq END .  (reduce by rule 11)



	.	reduce by rule 11


state 70:

	tydec : TYPE ID EQ ty .  (reduce by rule 23)



	.	reduce by rule 23


state 71:

	ty : ARRAY . OF ID 

	OF	shift 80


	.	error


state 72:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 78

	nonempty_tyfields	goto 77
	tyfields	goto 81

	.	reduce by rule 27


state 73:

	ty : ID .  (reduce by rule 24)



	.	reduce by rule 24


state 74:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 22)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 22


state 75:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 82


	.	error


state 76:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 83


	.	error


state 77:

	tyfields : nonempty_tyfields .  (reduce by rule 28)



	.	reduce by rule 28


state 78:

	nonempty_tyfields : ID . COLON ID 
	nonempty_tyfields : ID . COLON ID COMMA nonempty_tyfields 

	COLON	shift 84


	.	error


state 79:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	nonempty_parameters : nonempty_parameters COMMA exp .  (reduce by rule 41)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 41


state 80:

	ty : ARRAY OF . ID 

	ID	shift 85


	.	error


state 81:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 86


	.	error


state 82:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 87
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 83:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 89
	EQ	shift 88


	.	error


state 84:

	nonempty_tyfields : ID COLON . ID 
	nonempty_tyfields : ID COLON . ID COMMA nonempty_tyfields 

	ID	shift 90


	.	error


state 85:

	ty : ARRAY OF ID .  (reduce by rule 26)



	.	reduce by rule 26


state 86:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 25)



	.	reduce by rule 25


state 87:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 21)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 21


state 88:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 91
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 89:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 92


	.	error


state 90:

	nonempty_tyfields : ID COLON ID .  (reduce by rule 29)
	nonempty_tyfields : ID COLON ID . COMMA nonempty_tyfields 

	COMMA	shift 93


	.	reduce by rule 29


state 91:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 31)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 31


state 92:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 94


	.	error


state 93:

	nonempty_tyfields : ID COLON ID COMMA . nonempty_tyfields 

	ID	shift 78

	nonempty_tyfields	goto 95

	.	error


state 94:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 17
	INT	shift 16
	STRING	shift 15
	LPAREN	shift 14
	MINUS	shift 13
	LET	shift 12
	NIL	shift 11

	exp	goto 96
	rvalue	goto 9
	letexp	goto 8
	arithmetic	goto 7
	function_call	goto 6
	id_subscript	goto 5
	array_creation	goto 4
	lvalue	goto 3
	lvalue_complex	goto 2
	assignment	goto 1

	.	error


state 95:

	nonempty_tyfields : ID COLON ID COMMA nonempty_tyfields .  (reduce by rule 30)



	.	reduce by rule 30


state 96:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 32)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 32


state 97:


	EOF	accept


	.	error

121 of 335 action table entries left after compaction
213 goto table entries
