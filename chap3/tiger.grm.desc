
state 0:

	program : . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 5
	program	goto 76
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 1:

	exp : arithmetic .  (reduce by rule 2)



	.	reduce by rule 2


state 2:

	exp : letexp .  (reduce by rule 1)



	.	reduce by rule 1


state 3:

	exp : rvalue .  (reduce by rule 5)



	.	reduce by rule 5


state 4:

	exp : lvalue .  (reduce by rule 4)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 13
	DOT	shift 12


	.	reduce by rule 4


state 5:

	program : exp .  (reduce by rule 0)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 0


state 6:

	exp : NIL .  (reduce by rule 6)



	.	reduce by rule 6


state 7:

	letexp : LET . decs IN expseq END 

	FUNCTION	shift 25
	VAR	shift 24
	TYPE	shift 23

	decs	goto 22
	dec	goto 21
	vardec	goto 20
	tydec	goto 19
	fundec	goto 18

	.	reduce by rule 17


state 8:

	exp : LPAREN . expseq RPAREN 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 28
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	nonempty_expseq	goto 27
	expseq	goto 26
	arithmetic	goto 1

	.	reduce by rule 13


state 9:

	rvalue : STRING .  (reduce by rule 11)



	.	reduce by rule 11


state 10:

	rvalue : INT .  (reduce by rule 10)



	.	reduce by rule 10


state 11:

	lvalue : ID .  (reduce by rule 7)



	.	reduce by rule 7


state 12:

	lvalue : lvalue DOT . ID 

	ID	shift 29


	.	error


state 13:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 30
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 14:

	arithmetic : exp DIVIDE . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 31
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 15:

	arithmetic : exp TIMES . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 32
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 16:

	arithmetic : exp MINUS . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 33
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 17:

	arithmetic : exp PLUS . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 34
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 18:

	dec : fundec .  (reduce by rule 21)



	.	reduce by rule 21


state 19:

	dec : tydec .  (reduce by rule 20)



	.	reduce by rule 20


state 20:

	dec : vardec .  (reduce by rule 19)



	.	reduce by rule 19


state 21:

	decs : dec . decs 

	FUNCTION	shift 25
	VAR	shift 24
	TYPE	shift 23

	decs	goto 35
	dec	goto 21
	vardec	goto 20
	tydec	goto 19
	fundec	goto 18

	.	reduce by rule 17


state 22:

	letexp : LET decs . IN expseq END 

	IN	shift 36


	.	error


state 23:

	tydec : TYPE . ID EQ ty 

	ID	shift 37


	.	error


state 24:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 38


	.	error


state 25:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 39


	.	error


state 26:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 40


	.	error


state 27:

	nonempty_expseq : nonempty_expseq . SEMICOLON exp 
	expseq : nonempty_expseq .  (reduce by rule 14)

	SEMICOLON	shift 41


	.	reduce by rule 14


state 28:

	nonempty_expseq : exp .  (reduce by rule 15)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 15


state 29:

	lvalue : lvalue DOT ID .  (reduce by rule 8)



	.	reduce by rule 8


state 30:

	lvalue : lvalue LBRACK exp . RBRACK 
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	RBRACK	shift 42
	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	error


state 31:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 
	arithmetic : exp DIVIDE exp .  (reduce by rule 37)



	.	reduce by rule 37


state 32:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp TIMES exp .  (reduce by rule 36)
	arithmetic : exp . DIVIDE exp 



	.	reduce by rule 36


state 33:

	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp MINUS exp .  (reduce by rule 35)
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 35


state 34:

	arithmetic : exp . PLUS exp 
	arithmetic : exp PLUS exp .  (reduce by rule 34)
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 34


state 35:

	decs : dec decs .  (reduce by rule 18)



	.	reduce by rule 18


state 36:

	letexp : LET decs IN . expseq END 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 28
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	nonempty_expseq	goto 27
	expseq	goto 43
	arithmetic	goto 1

	.	reduce by rule 13


state 37:

	tydec : TYPE ID . EQ ty 

	EQ	shift 44


	.	error


state 38:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 46
	ASSIGN	shift 45


	.	error


state 39:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 47


	.	error


state 40:

	exp : LPAREN expseq RPAREN .  (reduce by rule 3)



	.	reduce by rule 3


state 41:

	nonempty_expseq : nonempty_expseq SEMICOLON . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 48
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 42:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 9)



	.	reduce by rule 9


state 43:

	letexp : LET decs IN expseq . END 

	END	shift 49


	.	error


state 44:

	tydec : TYPE ID EQ . ty 

	ID	shift 53
	LBRACE	shift 52
	ARRAY	shift 51

	ty	goto 50

	.	error


state 45:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 54
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 46:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 55


	.	error


state 47:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 58

	nonempty_tyfields	goto 57
	tyfields	goto 56

	.	reduce by rule 28


state 48:

	nonempty_expseq : nonempty_expseq SEMICOLON exp .  (reduce by rule 16)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 16


state 49:

	letexp : LET decs IN expseq END .  (reduce by rule 12)



	.	reduce by rule 12


state 50:

	tydec : TYPE ID EQ ty .  (reduce by rule 24)



	.	reduce by rule 24


state 51:

	ty : ARRAY . OF ID 

	OF	shift 59


	.	error


state 52:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 58

	nonempty_tyfields	goto 57
	tyfields	goto 60

	.	reduce by rule 28


state 53:

	ty : ID .  (reduce by rule 25)



	.	reduce by rule 25


state 54:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 23)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 23


state 55:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 61


	.	error


state 56:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 62


	.	error


state 57:

	tyfields : nonempty_tyfields .  (reduce by rule 29)



	.	reduce by rule 29


state 58:

	nonempty_tyfields : ID . COLON ID 
	nonempty_tyfields : ID . COLON ID COMMA nonempty_tyfields 

	COLON	shift 63


	.	error


state 59:

	ty : ARRAY OF . ID 

	ID	shift 64


	.	error


state 60:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 65


	.	error


state 61:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 66
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 62:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 68
	EQ	shift 67


	.	error


state 63:

	nonempty_tyfields : ID COLON . ID 
	nonempty_tyfields : ID COLON . ID COMMA nonempty_tyfields 

	ID	shift 69


	.	error


state 64:

	ty : ARRAY OF ID .  (reduce by rule 27)



	.	reduce by rule 27


state 65:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 26)



	.	reduce by rule 26


state 66:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 22)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 22


state 67:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 70
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 68:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 71


	.	error


state 69:

	nonempty_tyfields : ID COLON ID .  (reduce by rule 30)
	nonempty_tyfields : ID COLON ID . COMMA nonempty_tyfields 

	COMMA	shift 72


	.	reduce by rule 30


state 70:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 32)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 32


state 71:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 73


	.	error


state 72:

	nonempty_tyfields : ID COLON ID COMMA . nonempty_tyfields 

	ID	shift 58

	nonempty_tyfields	goto 74

	.	error


state 73:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 11
	INT	shift 10
	STRING	shift 9
	LPAREN	shift 8
	LET	shift 7
	NIL	shift 6

	exp	goto 75
	lvalue	goto 4
	rvalue	goto 3
	letexp	goto 2
	arithmetic	goto 1

	.	error


state 74:

	nonempty_tyfields : ID COLON ID COMMA nonempty_tyfields .  (reduce by rule 31)



	.	reduce by rule 31


state 75:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 33)
	arithmetic : exp . PLUS exp 
	arithmetic : exp . MINUS exp 
	arithmetic : exp . TIMES exp 
	arithmetic : exp . DIVIDE exp 

	PLUS	shift 17
	MINUS	shift 16
	TIMES	shift 15
	DIVIDE	shift 14


	.	reduce by rule 33


state 76:


	EOF	accept


	.	error

85 of 232 action table entries left after compaction
86 goto table entries
